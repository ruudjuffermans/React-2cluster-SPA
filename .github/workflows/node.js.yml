# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  APP_NAME: 'node'
  COMPONENT_NAME: 'backend'
  RELEASE_PATH: /data/sites/web/ruudjuffermansnl


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # The second step sets up Node.js with version 16.
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16


    - name: Transfer files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.REMOTE_SERVER }}
        username: ${{ secrets.REMOTE_USER }}
        password: ${{ secrets.REMOTE_PASS }}
        rm: true
        target: ${{ env.RELEASE_PATH }}/www

    # - name: Copy config files
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.REMOTE_SERVER }}
    #     username: ${{ secrets.REMOTE_USER }}
    #     key: ${{ secrets.REMOTE_KEY }}
    #     script: |
    #       echo '${{ secrets.ENV_FILE }}' > ${{ env.RELEASE_PATH }}/build/.env
    #       echo '${{ vars.NGINX_CONFIG }}' > ${{ env.RELEASE_PATH }}/build/nginx.conf
    #       sudo systemctl restart nginx

    # - name: Install dependencies
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.REMOTE_SERVER }}
    #     username: ${{ secrets.REMOTE_USER }}
    #     password: ${{ secrets.REMOTE_PASS }}
    #     script: |
    #       cd ${{ env.RELEASE_PATH }}/build
    #       npm i
    #       npm run build